DROP TABLE IF EXISTS users, categories, events, requests, compilations, compilation_events, comments;

CREATE TABLE IF NOT EXISTS users (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(250) NOT NULL,
    email VARCHAR(500) NOT NULL UNIQUE,
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS categories (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) UNIQUE NOT NULL,
    CONSTRAINT UQ_CATEGORY_NAME UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS state (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50)
);

CREATE TABLE IF NOT EXISTS events (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title VARCHAR(205) NOT NULL,
    annotation VARCHAR(2000) NOT NULL,
    category_id INT NOT NULL,
    confirmed_requests INT,
    created_on TIMESTAMP WITHOUT TIME ZONE,
    description VARCHAR(7000),
    event_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    initiator_id INT NOT NULL,
    lat NUMERIC NOT NULL,
    lon NUMERIC NOT NULL,
    paid BOOLEAN,
    participant_limit INT,
    published_on TIMESTAMP WITHOUT TIME ZONE,
    request_moderation BOOLEAN,
    state_id INT,
    views INT,
    CONSTRAINT fk_events_to_categories FOREIGN KEY (category_id) REFERENCES categories (id) ON DELETE CASCADE,
    CONSTRAINT fk_events_to_users FOREIGN KEY (initiator_id) REFERENCES  users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS compilations (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pinned BOOLEAN,
    title VARCHAR(150) NOT NULL
);

CREATE TABLE IF NOT EXISTS requests (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created TIMESTAMP WITHOUT TIME ZONE,
    event_id INT NOT NULL,
    requester_id INT NOT NULL,
    state_id INT,
    CONSTRAINT fk_requests_to_events FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE,
    CONSTRAINT fk_requests_to_users FOREIGN KEY (requester_id) REFERENCES  users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS compilation_events (
    compilation_id INT NOT NULL,
    event_id INT NOT NULL,
    CONSTRAINT fk_compilation_events_to_compilations FOREIGN KEY (compilation_id) REFERENCES compilations (id) ON DELETE CASCADE,
    CONSTRAINT fk_compilation_events_to_events FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS comments (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event_id INT NOT NULL,
    author_id INT NOT NULL,
    text VARCHAR(5000) NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    updated_at TIMESTAMP WITHOUT TIME ZONE,
    status VARCHAR(10) NOT NULL,
    CONSTRAINT fk_comments_to_users FOREIGN KEY (author_id) REFERENCES users(id) ON DELETE CASCADE,
    CONSTRAINT fk_comments_to_events FOREIGN KEY (event_id) REFERENCES events(id) ON DELETE CASCADE
);